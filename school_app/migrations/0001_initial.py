# Generated by Django 5.1.5 on 2025-03-26 12:08

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='BreakPeriod',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day', models.CharField(choices=[('Monday', 'Monday'), ('Tuesday', 'Tuesday'), ('Wednesday', 'Wednesday'), ('Thursday', 'Thursday'), ('Friday', 'Friday'), ('Saturday', 'Saturday'), ('Sunday', 'Sunday')], max_length=10)),
                ('period', models.IntegerField(choices=[(1, 'Period 1'), (2, 'Period 2'), (3, 'Period 3'), (4, 'Period 4'), (5, 'Period 5'), (6, 'Period 6'), (7, 'Period 7'), (8, 'Period 8'), (9, 'Period 9')])),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('break_type', models.CharField(choices=[('Short', 'Short Break'), ('Lunch', 'Lunch Break')], max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='Class',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('syllabus', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Exam',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Parent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('username', models.CharField(max_length=20, unique=True)),
                ('password', models.CharField(max_length=128)),
                ('phone', models.CharField(max_length=15)),
                ('aadhar', models.CharField(max_length=12, unique=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True, unique=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PeriodTiming',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('period', models.IntegerField(unique=True)),
                ('default_start_time', models.TimeField()),
                ('default_end_time', models.TimeField()),
            ],
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='YearlyEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('category', models.CharField(choices=[('Exam', 'Exam'), ('Meeting', 'Meeting'), ('Extracurricular', 'Extracurricular'), ('Other', 'Other')], default='Other', max_length=50)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name='ExamDate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('exam', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exam_dates', to='school_app.exam')),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('aadhar', models.CharField(max_length=12, unique=True)),
                ('pen', models.CharField(blank=True, max_length=20, null=True, unique=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True, unique=True)),
                ('phone', models.CharField(max_length=15)),
                ('address', models.TextField()),
                ('roll_number', models.CharField(blank=True, max_length=20, null=True, unique=True)),
                ('role', models.CharField(blank=True, max_length=50, null=True)),
                ('category', models.CharField(choices=[('General', 'General'), ('OBC', 'OBC'), ('SC', 'SC'), ('ST', 'ST'), ('Others', 'Others')], default='General', max_length=10)),
                ('assigned_class', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='students', to='school_app.class')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='children', to='school_app.parent')),
            ],
            options={
                'unique_together': {('assigned_class', 'roll_number')},
            },
        ),
        migrations.CreateModel(
            name='Marks',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('marks_obtained', models.FloatField(blank=True, null=True)),
                ('total_obtained_marks', models.FloatField(blank=True, null=True)),
                ('remarks', models.TextField(blank=True, null=True)),
                ('exam', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='school_app.exam')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='marks', to='school_app.student')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='school_app.subject')),
            ],
        ),
        migrations.CreateModel(
            name='SubSubject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sub_subjects', to='school_app.subject')),
            ],
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('phone', models.CharField(max_length=15, unique=True)),
                ('employee_id', models.CharField(blank=True, max_length=10, null=True, unique=True)),
                ('login_id', models.CharField(blank=True, max_length=20, null=True, unique=True)),
                ('password', models.CharField(blank=True, max_length=128, null=True)),
                ('is_class_teacher', models.BooleanField(default=False)),
                ('extra_skills', models.TextField(blank=True, null=True)),
                ('is_absent', models.BooleanField(default=False)),
                ('max_teaching_periods', models.PositiveIntegerField(default=6)),
                ('assigned_classes', models.ManyToManyField(blank=True, to='school_app.class')),
                ('subjects', models.ManyToManyField(blank=True, to='school_app.subject')),
            ],
        ),
        migrations.AddField(
            model_name='class',
            name='class_teacher',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='teaching_classes', to='school_app.teacher'),
        ),
        migrations.CreateModel(
            name='Teacher_Subject_Class_Relation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_priority_substitute', models.BooleanField(default=False)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('assigned_classes', models.ManyToManyField(to='school_app.class')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='school_app.subject')),
                ('teacher', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='school_app.teacher')),
            ],
        ),
        migrations.CreateModel(
            name='Timetable',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day', models.CharField(choices=[('Monday', 'Monday'), ('Tuesday', 'Tuesday'), ('Wednesday', 'Wednesday'), ('Thursday', 'Thursday'), ('Friday', 'Friday'), ('Saturday', 'Saturday'), ('Sunday', 'Sunday')], max_length=10)),
                ('date', models.DateField(blank=True, null=True)),
                ('period', models.IntegerField(choices=[(1, 'Period 1'), (2, 'Period 2'), (3, 'Period 3'), (4, 'Period 4'), (5, 'Period 5'), (6, 'Period 6'), (7, 'Period 7'), (8, 'Period 8'), (9, 'Period 9')])),
                ('start_time', models.TimeField(blank=True, null=True)),
                ('end_time', models.TimeField(blank=True, null=True)),
                ('is_break', models.BooleanField(default=False)),
                ('class_obj', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='timetable', to='school_app.class')),
                ('teacher_subject', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='school_app.teacher_subject_class_relation')),
            ],
        ),
        migrations.CreateModel(
            name='ExamSchedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('total_marks', models.IntegerField()),
                ('exam', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='schedules', to='school_app.exam')),
                ('school_class', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='class_exams', to='school_app.class')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='school_app.subject')),
            ],
            options={
                'unique_together': {('exam', 'school_class', 'subject')},
            },
        ),
        migrations.CreateModel(
            name='InternalAssessment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('max_marks', models.PositiveIntegerField()),
                ('obtained_marks', models.PositiveIntegerField(blank=True, null=True)),
                ('school_class', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assessments', to='school_app.class')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assessments', to='school_app.subject')),
                ('subsubject', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='assessments', to='school_app.subsubject')),
            ],
            options={
                'unique_together': {('school_class', 'subject', 'subsubject')},
            },
        ),
        migrations.CreateModel(
            name='ClassSubSubjectAssignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('school_class', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subsubject_assignments', to='school_app.class')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='class_assignments', to='school_app.subject')),
                ('subsubject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='class_assignments', to='school_app.subsubject')),
            ],
            options={
                'unique_together': {('school_class', 'subject', 'subsubject')},
            },
        ),
    ]
